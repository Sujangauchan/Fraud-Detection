{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "310cf188",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1097231, 394)\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 1097231 entries, 0 to 590539\n",
      "Columns: 394 entries, TransactionID to isFraud\n",
      "dtypes: float64(377), int64(3), object(14)\n",
      "memory usage: 3.2+ GB\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "\n",
    "# Specify the file path\n",
    "test_transaction = pd.read_csv('/Users/sujangauchan/Desktop/ieee-fraud-detection-data/test_transaction.csv')\n",
    "test_identity = pd.read_csv('/Users/sujangauchan/Desktop/ieee-fraud-detection-data/test_identity.csv')\n",
    "train_transaction = pd.read_csv('/Users/sujangauchan/Desktop/ieee-fraud-detection-data/train_transaction.csv')\n",
    "train_identity = pd.read_csv('/Users/sujangauchan/Desktop/ieee-fraud-detection-data/train_identity.csv')\n",
    "\n",
    "all_transaction= pd.concat([test_transaction,train_transaction],axis=0)\n",
    "\n",
    "\n",
    "\n",
    "print(all_transaction.shape)\n",
    "print(all_transaction.info())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b4869175",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   TransactionID  TransactionDT  TransactionAmt ProductCD  card1  card2  \\\n",
      "0        3663549       18403224           31.95         W  10409  111.0   \n",
      "1        3663550       18403263           49.00         W   4272  111.0   \n",
      "2        3663551       18403310          171.00         W   4476  574.0   \n",
      "3        3663552       18403310          284.95         W  10989  360.0   \n",
      "4        3663553       18403317           67.95         W  18018  452.0   \n",
      "\n",
      "   card3       card4  card5  card6  ...  V331  V332  V333  V334 V335 V336  \\\n",
      "0  150.0        visa  226.0  debit  ...   NaN   NaN   NaN   NaN  NaN  NaN   \n",
      "1  150.0        visa  226.0  debit  ...   NaN   NaN   NaN   NaN  NaN  NaN   \n",
      "2  150.0        visa  226.0  debit  ...   NaN   NaN   NaN   NaN  NaN  NaN   \n",
      "3  150.0        visa  166.0  debit  ...   NaN   NaN   NaN   NaN  NaN  NaN   \n",
      "4  150.0  mastercard  117.0  debit  ...   NaN   NaN   NaN   NaN  NaN  NaN   \n",
      "\n",
      "   V337  V338  V339  isFraud  \n",
      "0   NaN   NaN   NaN      NaN  \n",
      "1   NaN   NaN   NaN      NaN  \n",
      "2   NaN   NaN   NaN      NaN  \n",
      "3   NaN   NaN   NaN      NaN  \n",
      "4   NaN   NaN   NaN      NaN  \n",
      "\n",
      "[5 rows x 394 columns]\n"
     ]
    }
   ],
   "source": [
    "print(all_transaction.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "69426112",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1097231, 394)\n",
      "(506691, 393)\n",
      "(590540, 394)\n"
     ]
    }
   ],
   "source": [
    "print(all_transaction.shape)\n",
    "print(test_transaction.shape)\n",
    "print(train_transaction.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "491cfc1d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<bound method NDFrame.describe of         TransactionID  TransactionDT  TransactionAmt ProductCD  card1  card2  \\\n",
      "0             3663549       18403224           31.95         W  10409  111.0   \n",
      "1             3663550       18403263           49.00         W   4272  111.0   \n",
      "2             3663551       18403310          171.00         W   4476  574.0   \n",
      "3             3663552       18403310          284.95         W  10989  360.0   \n",
      "4             3663553       18403317           67.95         W  18018  452.0   \n",
      "...               ...            ...             ...       ...    ...    ...   \n",
      "590535        3577535       15811047           49.00         W   6550    NaN   \n",
      "590536        3577536       15811049           39.50         W  10444  225.0   \n",
      "590537        3577537       15811079           30.95         W  12037  595.0   \n",
      "590538        3577538       15811088          117.00         W   7826  481.0   \n",
      "590539        3577539       15811131          279.95         W  15066  170.0   \n",
      "\n",
      "        card3       card4  card5   card6  ...  V331  V332  V333  V334 V335  \\\n",
      "0       150.0        visa  226.0   debit  ...   NaN   NaN   NaN   NaN  NaN   \n",
      "1       150.0        visa  226.0   debit  ...   NaN   NaN   NaN   NaN  NaN   \n",
      "2       150.0        visa  226.0   debit  ...   NaN   NaN   NaN   NaN  NaN   \n",
      "3       150.0        visa  166.0   debit  ...   NaN   NaN   NaN   NaN  NaN   \n",
      "4       150.0  mastercard  117.0   debit  ...   NaN   NaN   NaN   NaN  NaN   \n",
      "...       ...         ...    ...     ...  ...   ...   ...   ...   ...  ...   \n",
      "590535  150.0        visa  226.0   debit  ...   NaN   NaN   NaN   NaN  NaN   \n",
      "590536  150.0  mastercard  224.0   debit  ...   NaN   NaN   NaN   NaN  NaN   \n",
      "590537  150.0  mastercard  224.0   debit  ...   NaN   NaN   NaN   NaN  NaN   \n",
      "590538  150.0  mastercard  224.0   debit  ...   NaN   NaN   NaN   NaN  NaN   \n",
      "590539  150.0  mastercard  102.0  credit  ...   NaN   NaN   NaN   NaN  NaN   \n",
      "\n",
      "       V336  V337  V338  V339  isFraud  \n",
      "0       NaN   NaN   NaN   NaN      NaN  \n",
      "1       NaN   NaN   NaN   NaN      NaN  \n",
      "2       NaN   NaN   NaN   NaN      NaN  \n",
      "3       NaN   NaN   NaN   NaN      NaN  \n",
      "4       NaN   NaN   NaN   NaN      NaN  \n",
      "...     ...   ...   ...   ...      ...  \n",
      "590535  NaN   NaN   NaN   NaN      0.0  \n",
      "590536  NaN   NaN   NaN   NaN      0.0  \n",
      "590537  NaN   NaN   NaN   NaN      0.0  \n",
      "590538  NaN   NaN   NaN   NaN      0.0  \n",
      "590539  NaN   NaN   NaN   NaN      0.0  \n",
      "\n",
      "[1097231 rows x 394 columns]>\n"
     ]
    }
   ],
   "source": [
    "print(all_transaction.describe)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "2c65576c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['TransactionID', 'TransactionDT', 'TransactionAmt', 'ProductCD',\n",
       "       'card1', 'card2', 'card3', 'card4', 'card5', 'card6',\n",
       "       ...\n",
       "       'V331', 'V332', 'V333', 'V334', 'V335', 'V336', 'V337', 'V338', 'V339',\n",
       "       'isFraud'],\n",
       "      dtype='object', length=394)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_transaction.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "55c2c518",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ea6733f6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
